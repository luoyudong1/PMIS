<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"  
    "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper
	namespace="com.kthw.pmis.mapper.repairManage.RepairMapper">
	<select id="getAllRepairParts" parameterType="Map"
		resultType="StockInfo">
		select sti.*,pd.part_name,pd.device_model,sd.supplier_name
		from (SELECT
		*, substring(si.part_id_seq, 1 , 5) partId FROM tbl_stock_info si)
		sti,tbl_parts_dict pd,tbl_suppliers_dict sd
		where sti.partId=pd.part_id
		and sd.supplier_id=pd.supplier_id and storage_state=2 and
		storehouse_id = ${storehouse_id}
		and sti.part_id_seq not in (SELECT
		pa.part_id_seq FROM tbl_parts_allocate
		pa WHERE source_storehouse_id =
		${storehouse_id})
		<if test='part_id !=null and part_id !="" '>
			and sti.part_id_seq like '%' || #{part_id} || '%'
		</if>
		<if test='part_name !=null and part_name !="" '>
			and pd.part_name like '%' || #{part_name} || '%'
		</if>
		ORDER BY sti.part_id_seq 
		LIMIT ${length} OFFSET ${start}
	</select>

	<select id="getAllRepairPartsCount" resultType="int">
        <![CDATA[ 
            select count(1) from tbl_stock_info 
            where storage_state=2
        ]]>
	</select>

	<select id="getRepairPartsParamCount" parameterType="Map"
		resultType="int">
		select count(1)
		from (SELECT *, substring(si.part_id_seq, 1 , 5) partId
		FROM tbl_stock_info si) sti,tbl_parts_dict pd,tbl_suppliers_dict sd
		where sti.partId=pd.part_id and sd.supplier_id=pd.supplier_id and
		storage_state=2 and storehouse_id = ${storehouse_id}
		and
		sti.part_id_seq not in (SELECT pa.part_id_seq FROM tbl_parts_allocate
		pa WHERE source_storehouse_id = ${storehouse_id})
		<if test='part_id !=null and part_id !="" '>
			and sti.part_id_seq like '%' || #{part_id} || '%'
		</if>
		<if test='part_name !=null and part_name !="" '>
			and pd.part_name like '%' || #{part_name} || '%'
		</if>
	</select>

	<insert id="addRepairParts" parameterType="Map">
		insert into
		tbl_parts_allocate(part_id_seq,source_storehouse_id,operator_id,operator_name,verify_flag,object_storehouse_id,verify_date,add_date,verify_name)
		values(#{parts_id},${storehouse_id},#{operator_id},#{operator_name},0,2,#{verify_date},#{add_date},#{verify_name})
	</insert>

	<select id="getAllVerifyParts" parameterType="Map"
		resultType="PartsAllocate">
		SELECT
		pai.*,pd.part_name,pd.device_model,si.part_code,sd.storehouse_name
		FROM (SELECT *, substring(pa.part_id_seq, 1 , 5) partId FROM
		tbl_parts_allocate pa) pai,tbl_parts_dict pd,tbl_stock_info
		si,tbl_storehouse_dict sd
		WHERE pai.partId=pd.part_id and
		pai.part_id_seq=si.part_id_seq and
		pai.source_storehouse_id=${storehouse_id} and
		si.storehouse_id=sd.storehouse_id
		<if test='part_id !=null and part_id !="" '>
			and pai.part_id_seq like '%' || #{part_id} || '%'
		</if>
		<if test='part_name !=null and part_name !="" '>
			and pd.part_name like '%' || #{part_name} || '%'
		</if>
		<if test='begin_time != null and begin_time != ""'>
			and pai.add_date >= to_timestamp(#{begin_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
		<if test='end_time != null and end_time != ""'>
			and pai.add_date &lt;= to_timestamp(#{end_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
		ORDER BY pai.part_id_seq desc
		LIMIT ${length} OFFSET ${start}
	</select>

	<select id="getAllVerifyPartsCount" resultType="int">
		select count(1)
		from tbl_parts_allocate
	</select>

	<select id="getVerifyPartsParamCount" parameterType="Map"
		resultType="int">
		select count(1)
		FROM (SELECT *, substring(pa.part_id_seq, 1 , 5) partId
		FROM tbl_parts_allocate pa) pai,tbl_parts_dict pd
		WHERE
		pai.partId=pd.part_id and source_storehouse_id = ${storehouse_id}
		<if test='part_id !=null and part_id !="" '>
			and pai.part_id_seq like '%' || #{part_id} || '%'
		</if>
		<if test='part_name !=null and part_name !="" '>
			and pd.part_name like '%' || #{part_name} || '%'
		</if>
		<if test='begin_time != null and begin_time != ""'>
			and pai.add_date >= to_timestamp(#{begin_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
		<if test='end_time != null and end_time != ""'>
			and pai.add_date &lt;= to_timestamp(#{end_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
	</select>

	<update id="partsModifyVerify" parameterType="Map">
		update tbl_parts_allocate set
		part_id_seq=#{part_id_seq}
		<if test='verify_id !=null and verify_id !=""'>
			, verify_id=${verify_id}
		</if>
		<if test='verify_name !=null and verify_name !=""'>
			, verify_name=#{verify_name}
		</if>
		<if test='verify_date !=null and verify_date !=""'>
			, verify_date=(select now())
		</if>
		<if test='remark !=null and remark !=""'>
			, remark=#{remark}
		</if>
		<if
			test='verify_flag !=null and verify_flag !="" or verify_flag == 0'>
			, verify_flag=${verify_flag}
		</if>
		<if test='return_date !=null and return_date !=""'>
			, return_date=(select now())
		</if>
		where part_id_seq=#{part_id_seq}
	</update>

	<select id="getAllVerifyingParts" parameterType="Map"
		resultType="PartsAllocate">
		SELECT pai.*,pd.part_name,pd.device_model,si.part_code
		FROM (SELECT *,
		substring(pa.part_id_seq, 1 , 5) partId FROM tbl_parts_allocate pa)
		pai,tbl_parts_dict pd,tbl_stock_info si
		WHERE pai.partId=pd.part_id and
		pai.part_id_seq=si.part_id_seq and
		pai.source_storehouse_id=${storehouse_id} and pai.verify_flag!=0
		<if test='part_id !=null and part_id !="" '>
			and pai.part_id_seq like '%' || #{part_id} || '%'
		</if>
		<if test='part_name !=null and part_name !="" '>
			and pd.part_name like '%' || #{part_name} || '%'
		</if>
		<if test='begin_time != null and begin_time != ""'>
			and pai.add_date >= to_timestamp(#{begin_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
		<if test='end_time != null and end_time != ""'>
			and pai.add_date &lt;= to_timestamp(#{end_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
		ORDER BY pai.part_id_seq
		LIMIT ${length} OFFSET ${start}
	</select>

	<select id="getAllVerifyingPartsCount" resultType="int">
		select
		count(1) from tbl_parts_allocate
		where verify_flag!=0
	</select>

	<select id="getVerifyingPartsParamCount" parameterType="Map"
		resultType="int">
		select count(1)
		FROM (SELECT *, substring(pa.part_id_seq, 1 , 5) partId
		FROM tbl_parts_allocate pa) pai,tbl_parts_dict pd
		WHERE
		pai.partId=pd.part_id and source_storehouse_id = ${storehouse_id} and
		pai.verify_flag!=0
		<if test='part_id !=null and part_id !="" '>
			and pai.part_id_seq like '%' || #{part_id} || '%'
		</if>
		<if test='part_name !=null and part_name !="" '>
			and pd.part_name like '%' || #{part_name} || '%'
		</if>
		<if test='begin_time != null and begin_time != ""'>
			and pai.add_date >= to_timestamp(#{begin_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
		<if test='end_time != null and end_time != ""'>
			and pai.add_date &lt;= to_timestamp(#{end_time},
			'yyyy-mm-dd hh24:mi:ss')
		</if>
	</select>

	<delete id="partsDelete" parameterType="Map">
		delete from
		tbl_parts_allocate where
		part_id_seq=#{part_id_seq} and
		source_storehouse_id=${storehouse_id} and verify_flag=0
	</delete>

	<select id="getStorehouse" parameterType="Map"
		resultType="StoreHouseInfo">
		select * from tbl_storehouse_dict where storehouse_id=1 or
		storehouse_id=6 or storehouse_id=4
	</select>

	<select id="getStorehouseOfRepairOut" parameterType="Map"
		resultType="StoreHouseInfo">
		select * from tbl_storehouse_dict where storehouse_id=3 or
		storehouse_id=5 or storehouse_id=8
	</select>
	<select id="getStorehouseByMap" parameterType="Map"
		resultType="StoreHouseInfo">
		select * from tbl_storehouse_dict
		<where>
			<if test="storeHouseName != null">
				AND storehouse_name =
				#{storeHouseName,jdbcType=VARCHAR}
			</if>
			<if test="storeHouseId != null">
				AND storehouse_id = #{storeHouseId,jdbcType=NUMERIC}
			</if>
			<if test="depotId != null">
				AND depot_id = #{depotId,jdbcType=NUMERIC}
			</if>
			<if test="type != null">
				AND type = #{type,jdbcType=NUMERIC}
			</if>
		</where>
	</select>
</mapper>